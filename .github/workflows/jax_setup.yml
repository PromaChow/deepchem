name: Test for DeepChem Jax
on:
  push:
    branches:
      - main

jobs:
  jax-build:
    runs-on: ubuntu-latest
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@v4
      - name: Cache pip modules for Linux
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements/jax/**') }}
          path: ~/.cache/pip
          restore-keys: '${{ runner.os }}-pip-

            '
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build DeepChem
        run: 'python -m pip install --upgrade pip

          pip install -e ''.[jax]''

          '
      - id: measurement-5
        name: Record Measurement After Build DeepChem
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Build DeepChem
          task: get-measurement
      - name: Import checking
        run: python -c "import deepchem; import jax;"
      - id: measurement-7
        name: Record Measurement After Import checking
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Import checking
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption-${{
          github.run_id }}.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption-${{ github.run_id }}.json
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.9'
          - '3.10'
          - '3.11'
  jax-test:
    env:
      OS: ${{ matrix.os }}
      PYTHON_VERSION: ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: start-measurement
      - if: matrix.os == 'ubuntu-latest'
        name: Maximize build space
        run: 'sudo rm -rf /usr/share/dotnet

          sudo rm -rf /opt/ghc

          sudo rm -rf "/usr/local/share/boost"

          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

          sudo rm -rf /usr/local/lib/android

          sudo rm -rf /opt/hostedtoolcache/CodeQL

          '
      - id: measurement-2
        name: Record Measurement After Maximize build space
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Maximize build space
          task: get-measurement
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        name: Set commit range (push to the master branch, e.g. merge)
        run: echo "COMMIT_RANGE=${{ github.event.before }}.." >> $GITHUB_ENV
      - id: measurement-5
        name: Record Measurement After Set commit range (push to the master branch,
          e.g. merge)
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Set commit range (push to the master branch, e.g. merge)
          task: get-measurement
      - if: github.event_name == 'pull_request'
        name: Set commit range (pull request)
        run: 'git fetch origin master

          echo "COMMIT_RANGE=origin/master..." >> $GITHUB_ENV

          '
      - id: measurement-7
        name: Record Measurement After Set commit range (pull request)
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Set commit range (pull request)
          task: get-measurement
      - if: runner.os == 'Linux'
        name: Cache pip packages for Linux
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements/jax/**') }}
          path: ~/.cache/pip
          restore-keys: '${{ runner.os }}-pip-

            '
      - if: runner.os == 'macOS'
        name: Cache pip packages for MacOS
        uses: actions/cache@v4
        with:
          key: ${{ matrix.os }}-pip-${{ hashFiles('requirements/jax/**') }}
          path: ~/Library/Caches/pip
          restore-keys: '${{ runner.os }}-pip-

            '
      - if: runner.os == 'Windows'
        name: Cache pip packages for Windows
        uses: actions/cache@v4
        with:
          key: ${{ matrix.os }}-pip-${{ hashFiles('requirements/jax/**') }}
          path: ~\AppData\Local\pip\Cache
          restore-keys: '${{ runner.os }}-pip-

            '
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Create env.yml
        run: 'python -m pip install --upgrade pip;

          pip install conda-merge;

          conda-merge requirements/env_common.yml requirements/env_test.yml requirements/jax/env_jax.cpu.yml
          > env.yml

          '
        shell: bash
      - id: measurement-13
        name: Record Measurement After Create env.yml
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Create env.yml
          task: get-measurement
      - name: Install all dependencies
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: deepchem
          auto-update-conda: true
          channels: conda-forge,defaults
          environment-file: env.yml
          miniconda-version: latest
          python-version: ${{ matrix.python-version }}
      - id: install
        name: Install DeepChem
        run: pip install -e .
        shell: bash -l {0}
      - id: measurement-16
        name: Record Measurement After Install DeepChem
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Install DeepChem
          task: get-measurement
      - if: ${{ (success() || failure()) && (steps.install.outcome == 'failure' ||
          steps.install.outcome == 'success') }}
        name: PyTest
        run: pytest -v -m 'jax' deepchem
        shell: bash -l {0}
      - id: measurement-18
        name: Record Measurement After PyTest
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: PyTest
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption-${{
          github.run_id }}.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption-${{ github.run_id }}.json
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - '3.9'
          - '3.10'
          - '3.11'
