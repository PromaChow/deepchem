name: Test DQC
on:
  push:
    branches:
      - main

jobs:
  test-dqc:
    env:
      OS: ${{ matrix.os }}
      PYTHON_VERSION: ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4.5.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Create env.yml
        run: "python -m pip install --upgrade pip;\npip install conda-merge; \nconda-merge\
          \ requirements/env_dqc.yml requirements/env_test.yml > env.yml\n"
        shell: bash
      - id: measurement-4
        name: Record Measurement After Create env.yml
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Create env.yml
          task: get-measurement
      - name: Install all dependencies
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: dqc
          auto-update-conda: true
          channels: conda-forge,defaults
          environment-file: env.yml
          miniconda-version: latest
          python-version: ${{ matrix.python-version }}
      - name: Conda info
        run: conda info
        shell: bash -el {0}
      - id: measurement-7
        name: Record Measurement After Conda info
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Conda info
          task: get-measurement
      - name: Install DeepChem
        run: pip install -e .
        shell: bash -l {0}
      - id: measurement-9
        name: Record Measurement After Install DeepChem
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Install DeepChem
          task: get-measurement
      - name: Show packages
        run: pip freeze
        shell: bash -l {0}
      - id: measurement-11
        name: Record Measurement After Show packages
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Show packages
          task: get-measurement
      - name: Import numpy
        run: python -c 'import numpy as np; print ("numpy version is %s" % np.__version__)'
        shell: bash -l {0}
      - id: measurement-13
        name: Record Measurement After Import numpy
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Import numpy
          task: get-measurement
      - name: Test Install
        run: 'python -c ''import deepchem; print("DeepChem version %s" % deepchem.__version__)''

          python -c ''import torch; print("Torch version %s" % torch.__version__)''

          python -c ''import dqc; print("DQC version %s" % dqc.__version__)''

          python -c ''import xitorch; print("Xitorch version %s" % xitorch.__version__)''

          python -c ''import pylibxc; print("pylibxc version %s" % pylibxc.version.__version__)''

          '
        shell: bash -l {0}
      - id: measurement-15
        name: Record Measurement After Test Install
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Test Install
          task: get-measurement
      - name: PyTest
        run: 'echo "running dqc pytest"

          pytest -v -m ''dqc'' deepchem

          '
        shell: bash -l {0}
      - id: measurement-17
        name: Record Measurement After PyTest
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: PyTest
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption-${{
          github.run_id }}.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption-${{ github.run_id }}.json
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - '3.8'
