name: Test for Build
on:
  push:
    branches:
      - main

jobs:
  core-build:
    runs-on: ${{ matrix.os }}
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@v4
      - name: Cache pip modules for Linux
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements/**') }}
          path: ~/.cache/pip
          restore-keys: '${{ runner.os }}-pip-

            '
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build DeepChem
        run: 'python -m pip install --upgrade pip

          pip install -e .

          '
      - id: measurement-5
        name: Record Measurement After Build DeepChem
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Build DeepChem
          task: get-measurement
      - name: Import checking
        run: python -c "import deepchem"
      - id: measurement-7
        name: Record Measurement After Import checking
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Import checking
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption-${{
          github.run_id }}.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption-${{ github.run_id }}.json
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            python-version: '3.9'
        os:
          - ubuntu-latest
        python-version:
          - '3.8'
          - '3.10'
          - '3.11'
  docker-build:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs:
      - core-build
      - pypi-build
    runs-on: ubuntu-latest
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: start-measurement
      - name: Maximize build space
        run: 'sudo rm -rf /usr/share/dotnet

          sudo rm -rf /opt/ghc

          sudo rm -rf "/usr/local/share/boost"

          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

          sudo rm -rf /usr/local/lib/android

          sudo rm -rf /opt/hostedtoolcache/CodeQL

          '
      - id: measurement-2
        name: Record Measurement After Maximize build space
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Maximize build space
          task: get-measurement
      - uses: actions/checkout@v4
      - id: buildx
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          path: /tmp/.buildx-cache
          restore-keys: ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
      - id: docker_build
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: ./docker/nightly
          push: true
          tags: deepchemio/deepchem:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      - id: measurement-9
        name: Record Measurement After Image digest
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Image digest
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption-${{
          github.run_id }}.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption-${{ github.run_id }}.json
  pypi-build:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs:
      - core-build
    runs-on: ubuntu-latest
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: start-measurement
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: 'python -m pip install --upgrade pip

          pip install setuptools wheel twine

          '
      - id: measurement-4
        name: Record Measurement After Install dependencies
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Install dependencies
          task: get-measurement
      - env:
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
          TWINE_USERNAME: __token__
        name: Publish (Nightly)
        run: 'python setup.py sdist bdist_wheel

          twine upload dist/*

          '
      - id: measurement-6
        name: Record Measurement After Publish (Nightly)
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Publish (Nightly)
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption-${{
          github.run_id }}.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption-${{ github.run_id }}.json
  test:
    env:
      OS: ${{ matrix.os }}
      PYTHON_VERSION: ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: start-measurement
      - if: matrix.os == 'ubuntu-latest'
        name: Maximize build space
        run: 'sudo rm -rf /usr/share/dotnet

          sudo rm -rf /opt/ghc

          sudo rm -rf "/usr/local/share/boost"

          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

          sudo rm -rf /usr/local/lib/android

          sudo rm -rf /opt/hostedtoolcache/CodeQL

          '
      - id: measurement-2
        name: Record Measurement After Maximize build space
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Maximize build space
          task: get-measurement
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        name: Set commit range (push to the master branch, e.g. merge)
        run: echo "COMMIT_RANGE=${{ github.event.before }}.." >> $GITHUB_ENV
      - id: measurement-5
        name: Record Measurement After Set commit range (push to the master branch,
          e.g. merge)
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Set commit range (push to the master branch, e.g. merge)
          task: get-measurement
      - if: github.event_name == 'pull_request'
        name: Set commit range (pull request)
        run: 'git fetch origin master

          echo "COMMIT_RANGE=origin/master..." >> $GITHUB_ENV

          '
      - id: measurement-7
        name: Record Measurement After Set commit range (pull request)
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Set commit range (pull request)
          task: get-measurement
      - if: runner.os == 'Linux'
        name: Cache pip packages for Linux
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements/**') }}
          path: ~/.cache/pip
          restore-keys: '${{ runner.os }}-pip-

            '
      - if: runner.os == 'macOS'
        name: Cache pip packages for MacOS
        uses: actions/cache@v4
        with:
          key: ${{ matrix.os }}-pip-${{ hashFiles('requirements/**') }}
          path: ~/Library/Caches/pip
          restore-keys: '${{ runner.os }}-pip-

            '
      - if: runner.os == 'Windows'
        name: Cache pip packages for Windows
        uses: actions/cache@v4
        with:
          key: ${{ matrix.os }}-pip-${{ hashFiles('requirements/**') }}
          path: ~\AppData\Local\pip\Cache
          restore-keys: '${{ runner.os }}-pip-

            '
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - if: startsWith(runner.os, 'macOS')
        name: Install prerequisites for XGBoost and LightGBM (MacOS)
        run: brew update && brew install libomp
      - id: measurement-13
        name: Record Measurement After Install prerequisites for XGBoost and LightGBM
          (MacOS)
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Install prerequisites for XGBoost and LightGBM (MacOS)
          task: get-measurement
      - if: ${{ matrix.python-version != '3.8' && matrix.python-version != '3.11'}}
        name: Create env.yml for python >3.8
        run: "python -m pip install --upgrade pip;\npip install conda-merge;\ncd requirements\n\
          if [ \"$(uname)\" == 'Linux' ]; then\n  sudo apt-get update\n  sudo apt-get\
          \ install -y libopenblas-dev libatlas-base-dev libblas-dev liblapack-dev\
          \ libhdf5-dev\n  conda-merge env_common.yml env_test.yml env_ubuntu.yml\
          \ tensorflow/env_tensorflow.cpu.yml torch/env_torch.cpu.yml jax/env_jax.cpu.yml\
          \ > env.yml\nelif [  \"$(uname)\" == 'Darwin' ]; then\n  conda-merge env_common.yml\
          \ env_test.yml env_mac.yml tensorflow/env_tensorflow.cpu.yml torch/env_torch.mac.cpu.yml\
          \ jax/env_jax.cpu.yml > env.yml\nelif [[  \"$(uname)\" == \"MINGW64_NT\"\
          * ]]; then\n  conda-merge env_common.yml env_test.yml tensorflow/env_tensorflow.cpu.yml\
          \ torch/env_torch.win.cpu.yml > env.yml\nfi;\ncd ..\ncp requirements/env.yml\
          \ env.yml\n"
        shell: bash
      - id: measurement-15
        name: Record Measurement After Create env.yml for python >3.8
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Create env.yml for python >3.8
          task: get-measurement
      - if: ${{ matrix.python-version == '3.11' }}
        name: Create env.yml for python 3.11
        run: "python -m pip install --upgrade pip;\npip install conda-merge;\ncd requirements\n\
          if [ \"$(uname)\" == 'Linux' ]; then\n  sudo apt-get update\n  sudo apt-get\
          \ install -y libopenblas-dev libatlas-base-dev libblas-dev liblapack-dev\
          \ libhdf5-dev\n  conda-merge env_common.yml env_test.yml env_ubuntu_3_11.yml\
          \ tensorflow/env_tensorflow.cpu.yml torch/env_torch.cpu.yml > env.yml\n\
          elif [  \"$(uname)\" == 'Darwin' ]; then\n  conda-merge env_common.yml env_test.yml\
          \ env_mac_3_11.yml tensorflow/env_tensorflow.cpu.yml torch/env_torch.mac.cpu.yml\
          \ > env.yml\nelif [[  \"$(uname)\" == \"MINGW64_NT\"* ]]; then\n  conda-merge\
          \ env_common.yml env_test.yml tensorflow/env_tensorflow.cpu.yml torch/env_torch.win.cpu.yml\
          \ > env.yml\nfi;\ncd ..\ncp requirements/env.yml env.yml\n"
        shell: bash
      - id: measurement-17
        name: Record Measurement After Create env.yml for python 3.11
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Create env.yml for python 3.11
          task: get-measurement
      - if: ${{ matrix.python-version == '3.8' }}
        name: Create env.yml for python 3.8
        run: "python -m pip install --upgrade pip;\npip install conda-merge;\ncd requirements\n\
          if [ \"$(uname)\" == 'Linux' ]; then\n  sudo apt-get update\n  sudo apt-get\
          \ install -y libopenblas-dev libatlas-base-dev libblas-dev liblapack-dev\
          \ libhdf5-dev\n  conda-merge env_common_3_8.yml env_test.yml env_ubuntu.yml\
          \ tensorflow/env_tensorflow.cpu.yml torch/env_torch.cpu.yml > env.yml\n\
          elif [  \"$(uname)\" == 'Darwin' ]; then\n  conda-merge env_common_3_8.yml\
          \ env_test.yml env_mac.yml tensorflow/env_tensorflow.cpu.yml torch/env_torch.mac.cpu.yml\
          \ > env.yml\nelif [[  \"$(uname)\" == \"MINGW64_NT\"* ]]; then\n  conda-merge\
          \ env_common_3_8.yml env_test.yml tensorflow/env_tensorflow.cpu.yml torch/env_torch.win.cpu.yml\
          \ > env.yml\nfi;\ncd ..\ncp requirements/env.yml env.yml\n"
        shell: bash
      - id: measurement-19
        name: Record Measurement After Create env.yml for python 3.8
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Create env.yml for python 3.8
          task: get-measurement
      - name: Install all dependencies using micromamba
        uses: mamba-org/setup-micromamba@main
        with:
          create-args: python=${{ matrix.python-version }}
          environment-file: env.yml
          environment-name: deepchem
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption-${{
          github.run_id }}.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption-${{ github.run_id }}.json
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            python-version: 3.9
        os:
          - ubuntu-latest
        python-version:
          - '3.8'
          - '3.10'
          - '3.11'
